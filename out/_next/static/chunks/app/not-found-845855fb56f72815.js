(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[345],{347:()=>{},6882:(e,t,r)=>{Promise.resolve().then(r.bind(r,8614))},8614:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>u});var n=r(5155),i=r(6874),o=r(2115);let a=function(e){let{SIM_RESOLUTION:t=128,DYE_RESOLUTION:r=1440,CAPTURE_RESOLUTION:i=512,DENSITY_DISSIPATION:a=3.5,VELOCITY_DISSIPATION:u=2,PRESSURE:l=.1,PRESSURE_ITERATIONS:c=20,CURL:v=3,SPLAT_RADIUS:f=.2,SPLAT_FORCE:s=6e3,SHADING:m=!0,COLOR_UPDATE_SPEED:d=10,BACK_COLOR:h={r:.5,g:0,b:0},TRANSPARENT:x=!0}=e,g=(0,o.useRef)(null);return(0,o.useEffect)(()=>{let e,n,i,o,h,x;let T=g.current;if(!T)return;let E={SIM_RESOLUTION:t,DYE_RESOLUTION:r,DENSITY_DISSIPATION:a,VELOCITY_DISSIPATION:u,PRESSURE:l,PRESSURE_ITERATIONS:c,CURL:v,SPLAT_RADIUS:f,SPLAT_FORCE:s,SHADING:m,COLOR_UPDATE_SPEED:d},p=[new function(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[0,0,0]}],{gl:R,ext:D}=function(e){let t,r,n,i,o;let a={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},u=e.getContext("webgl2",a),l=!!u;l||(u=e.getContext("webgl",a)||e.getContext("experimental-webgl",a)),l?(u.getExtension("EXT_color_buffer_float"),r=u.getExtension("OES_texture_float_linear")):(t=u.getExtension("OES_texture_half_float"),r=u.getExtension("OES_texture_half_float_linear")),u.clearColor(0,0,0,1);let c=l?u.HALF_FLOAT:t&&t.HALF_FLOAT_OES;return l?(n=S(u,u.RGBA16F,u.RGBA,c),i=S(u,u.RG16F,u.RG,c),o=S(u,u.R16F,u.RED,c)):(n=S(u,u.RGBA,u.RGBA,c),i=S(u,u.RGBA,u.RGBA,c),o=S(u,u.RGBA,u.RGBA,c)),{gl:u,ext:{formatRGBA:n,formatRG:i,formatR:o,halfFloatTexType:c,supportLinearFiltering:r}}}(T);function S(e,t,r,n){if(!function(e,t,r,n){let i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,t,4,4,0,r,n,null);let o=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE}(e,t,r,n))switch(t){case e.R16F:return S(e,e.RG16F,e.RG,n);case e.RG16F:return S(e,e.RGBA16F,e.RGBA,n);default:return null}return{internalFormat:t,format:r}}D.supportLinearFiltering||(E.DYE_RESOLUTION=256,E.SHADING=!1);class _{setKeywords(e){let t=0;for(let r=0;r<e.length;r++)t+=function(e){if(0===e.length)return 0;let t=0;for(let r=0;r<e.length;r++)t=(t<<5)-t+e.charCodeAt(r)|0;return t}(e[r]);let r=this.programs[t];if(null==r){let n=b(R.FRAGMENT_SHADER,this.fragmentShaderSource,e);r=A(this.vertexShader,n),this.programs[t]=r}r!==this.activeProgram&&(this.uniforms=w(r),this.activeProgram=r)}bind(){R.useProgram(this.activeProgram)}constructor(e,t){this.vertexShader=e,this.fragmentShaderSource=t,this.programs=[],this.activeProgram=null,this.uniforms=[]}}class y{bind(){R.useProgram(this.program)}constructor(e,t){this.uniforms={},this.program=A(e,t),this.uniforms=w(this.program)}}function A(e,t){let r=R.createProgram();return R.attachShader(r,e),R.attachShader(r,t),R.linkProgram(r),R.getProgramParameter(r,R.LINK_STATUS)||console.trace(R.getProgramInfoLog(r)),r}function w(e){let t=[],r=R.getProgramParameter(e,R.ACTIVE_UNIFORMS);for(let n=0;n<r;n++){let r=R.getActiveUniform(e,n).name;t[r]=R.getUniformLocation(e,r)}return t}function b(e,t,r){t=function(e,t){if(!t)return e;let r="";return t.forEach(e=>{r+="#define "+e+"\n"}),r+e}(t,r);let n=R.createShader(e);return R.shaderSource(n,t),R.compileShader(n),R.getShaderParameter(n,R.COMPILE_STATUS)||console.trace(R.getShaderInfoLog(n)),n}let F=b(R.VERTEX_SHADER,"\n        precision highp float;\n        attribute vec2 aPosition;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform vec2 texelSize;\n\n        void main () {\n            vUv = aPosition * 0.5 + 0.5;\n            vL = vUv - vec2(texelSize.x, 0.0);\n            vR = vUv + vec2(texelSize.x, 0.0);\n            vT = vUv + vec2(0.0, texelSize.y);\n            vB = vUv - vec2(0.0, texelSize.y);\n            gl_Position = vec4(aPosition, 0.0, 1.0);\n        }\n      "),U=b(R.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        uniform sampler2D uTexture;\n\n        void main () {\n            gl_FragColor = texture2D(uTexture, vUv);\n        }\n      "),L=b(R.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        uniform sampler2D uTexture;\n        uniform float value;\n\n        void main () {\n            gl_FragColor = value * texture2D(uTexture, vUv);\n        }\n     "),B=b(R.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uTarget;\n        uniform float aspectRatio;\n        uniform vec3 color;\n        uniform vec2 point;\n        uniform float radius;\n\n        void main () {\n            vec2 p = vUv - point.xy;\n            p.x *= aspectRatio;\n            vec3 splat = exp(-dot(p, p) / radius) * color;\n            vec3 base = texture2D(uTarget, vUv).xyz;\n            gl_FragColor = vec4(base + splat, 1.0);\n        }\n      "),P=b(R.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uSource;\n        uniform vec2 texelSize;\n        uniform vec2 dyeTexelSize;\n        uniform float dt;\n        uniform float dissipation;\n\n        vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n            vec2 st = uv / tsize - 0.5;\n            vec2 iuv = floor(st);\n            vec2 fuv = fract(st);\n\n            vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n            vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n            vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n            vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n            return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n        }\n\n        void main () {\n            #ifdef MANUAL_FILTERING\n                vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n                vec4 result = bilerp(uSource, coord, dyeTexelSize);\n            #else\n                vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n                vec4 result = texture2D(uSource, coord);\n            #endif\n            float decay = 1.0 + dissipation * dt;\n            gl_FragColor = result / decay;\n        }\n      ",D.supportLinearFiltering?null:["MANUAL_FILTERING"]),N=b(R.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uVelocity, vL).x;\n            float R = texture2D(uVelocity, vR).x;\n            float T = texture2D(uVelocity, vT).y;\n            float B = texture2D(uVelocity, vB).y;\n\n            vec2 C = texture2D(uVelocity, vUv).xy;\n            if (vL.x < 0.0) { L = -C.x; }\n            if (vR.x > 1.0) { R = -C.x; }\n            if (vT.y > 1.0) { T = -C.y; }\n            if (vB.y < 0.0) { B = -C.y; }\n\n            float div = 0.5 * (R - L + T - B);\n            gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n        }\n      "),X=b(R.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uVelocity, vL).y;\n            float R = texture2D(uVelocity, vR).y;\n            float T = texture2D(uVelocity, vT).x;\n            float B = texture2D(uVelocity, vB).x;\n            float vorticity = R - L - T + B;\n            gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n        }\n      "),z=b(R.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uCurl;\n        uniform float curl;\n        uniform float dt;\n\n        void main () {\n            float L = texture2D(uCurl, vL).x;\n            float R = texture2D(uCurl, vR).x;\n            float T = texture2D(uCurl, vT).x;\n            float B = texture2D(uCurl, vB).x;\n            float C = texture2D(uCurl, vUv).x;\n\n            vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n            force /= length(force) + 0.0001;\n            force *= curl * C;\n            force.y *= -1.0;\n\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\n            velocity += force * dt;\n            velocity = min(max(velocity, -1000.0), 1000.0);\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\n        }\n      "),C=b(R.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uPressure;\n        uniform sampler2D uDivergence;\n\n        void main () {\n            float L = texture2D(uPressure, vL).x;\n            float R = texture2D(uPressure, vR).x;\n            float T = texture2D(uPressure, vT).x;\n            float B = texture2D(uPressure, vB).x;\n            float C = texture2D(uPressure, vUv).x;\n            float divergence = texture2D(uDivergence, vUv).x;\n            float pressure = (L + R + B + T - divergence) * 0.25;\n            gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n        }\n      "),M=b(R.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uPressure;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uPressure, vL).x;\n            float R = texture2D(uPressure, vR).x;\n            float T = texture2D(uPressure, vT).x;\n            float B = texture2D(uPressure, vB).x;\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\n            velocity.xy -= vec2(R - L, T - B);\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\n        }\n      "),I=(R.bindBuffer(R.ARRAY_BUFFER,R.createBuffer()),R.bufferData(R.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),R.STATIC_DRAW),R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,R.createBuffer()),R.bufferData(R.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),R.STATIC_DRAW),R.vertexAttribPointer(0,2,R.FLOAT,!1,0,0),R.enableVertexAttribArray(0),function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];null==e?(R.viewport(0,0,R.drawingBufferWidth,R.drawingBufferHeight),R.bindFramebuffer(R.FRAMEBUFFER,null)):(R.viewport(0,0,e.width,e.height),R.bindFramebuffer(R.FRAMEBUFFER,e.fbo)),t&&(R.clearColor(0,0,0,1),R.clear(R.COLOR_BUFFER_BIT)),R.drawElements(R.TRIANGLES,6,R.UNSIGNED_SHORT,0)}),G=new y(F,U),Y=new y(F,L),O=new y(F,B),V=new y(F,P),H=new y(F,N),k=new y(F,X),j=new y(F,z),W=new y(F,C),K=new y(F,M),q=new _(F,"\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uTexture;\n      uniform sampler2D uDithering;\n      uniform vec2 ditherScale;\n      uniform vec2 texelSize;\n\n      vec3 linearToGamma (vec3 color) {\n          color = max(color, vec3(0));\n          return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n      }\n\n      void main () {\n          vec3 c = texture2D(uTexture, vUv).rgb;\n          #ifdef SHADING\n              vec3 lc = texture2D(uTexture, vL).rgb;\n              vec3 rc = texture2D(uTexture, vR).rgb;\n              vec3 tc = texture2D(uTexture, vT).rgb;\n              vec3 bc = texture2D(uTexture, vB).rgb;\n\n              float dx = length(rc) - length(lc);\n              float dy = length(tc) - length(bc);\n\n              vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n              vec3 l = vec3(0.0, 0.0, 1.0);\n\n              float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n              c *= diffuse;\n          #endif\n\n          float a = max(c.r, max(c.g, c.b));\n          gl_FragColor = vec4(c, a);\n      }\n    ");function J(){let t=eu(E.SIM_RESOLUTION),r=eu(E.DYE_RESOLUTION),a=D.halfFloatTexType,u=D.formatRGBA,l=D.formatRG,c=D.formatR,v=D.supportLinearFiltering?R.LINEAR:R.NEAREST;R.disable(R.BLEND),e=e?$(e,r.width,r.height,u.internalFormat,u.format,a,v):Z(r.width,r.height,u.internalFormat,u.format,a,v),n=n?$(n,t.width,t.height,l.internalFormat,l.format,a,v):Z(t.width,t.height,l.internalFormat,l.format,a,v),i=Q(t.width,t.height,c.internalFormat,c.format,a,R.NEAREST),o=Q(t.width,t.height,c.internalFormat,c.format,a,R.NEAREST),h=Z(t.width,t.height,c.internalFormat,c.format,a,R.NEAREST)}function Q(e,t,r,n,i,o){R.activeTexture(R.TEXTURE0);let a=R.createTexture();R.bindTexture(R.TEXTURE_2D,a),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MIN_FILTER,o),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MAG_FILTER,o),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_S,R.CLAMP_TO_EDGE),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_T,R.CLAMP_TO_EDGE),R.texImage2D(R.TEXTURE_2D,0,r,e,t,0,n,i,null);let u=R.createFramebuffer();R.bindFramebuffer(R.FRAMEBUFFER,u),R.framebufferTexture2D(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_2D,a,0),R.viewport(0,0,e,t),R.clear(R.COLOR_BUFFER_BIT);let l=1/e,c=1/t;return{texture:a,fbo:u,width:e,height:t,texelSizeX:l,texelSizeY:c,attach:e=>(R.activeTexture(R.TEXTURE0+e),R.bindTexture(R.TEXTURE_2D,a),e)}}function Z(e,t,r,n,i,o){let a=Q(e,t,r,n,i,o),u=Q(e,t,r,n,i,o);return{width:e,height:t,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(value){a=value},get write(){return u},set write(value){u=value},swap(){let e=a;a=u,u=e}}}function $(e,t,r,n,i,o,a){var u;let l;return e.width===t&&e.height===r?e:(u=e.read,l=Q(t,r,n,i,o,a),G.bind(),R.uniform1i(G.uniforms.uTexture,u.attach(0)),I(l),e.read=l,e.write=Q(t,r,n,i,o,a),e.width=t,e.height=r,e.texelSizeX=1/t,e.texelSizeY=1/r,e)}x=[],E.SHADING&&x.push("SHADING"),q.setKeywords(x),J();let ee=Date.now(),et=0;function er(){var t,r;let a,u,l,c,v,f;let s=(u=Math.min(u=((a=Date.now())-ee)/1e3,.016666),ee=a,u);l=el(T.clientWidth),c=el(T.clientHeight),T.width===l&&T.height===c||(T.width=l,T.height=c,0)||J(),(et+=s*E.COLOR_UPDATE_SPEED)>=1&&(et=function(e,t,r){let n=1;return 0===n?t:(e-t)%n+t}(et,0,1),p.forEach(e=>{e.color=ea()})),p.forEach(e=>{var t;let r,n;e.moved&&(e.moved=!1,r=(t=e).deltaX*E.SPLAT_FORCE,n=t.deltaY*E.SPLAT_FORCE,en(t.texcoordX,t.texcoordY,r,n,t.color))}),function(t){R.disable(R.BLEND),k.bind(),R.uniform2f(k.uniforms.texelSize,n.texelSizeX,n.texelSizeY),R.uniform1i(k.uniforms.uVelocity,n.read.attach(0)),I(o),j.bind(),R.uniform2f(j.uniforms.texelSize,n.texelSizeX,n.texelSizeY),R.uniform1i(j.uniforms.uVelocity,n.read.attach(0)),R.uniform1i(j.uniforms.uCurl,o.attach(1)),R.uniform1f(j.uniforms.curl,E.CURL),R.uniform1f(j.uniforms.dt,t),I(n.write),n.swap(),H.bind(),R.uniform2f(H.uniforms.texelSize,n.texelSizeX,n.texelSizeY),R.uniform1i(H.uniforms.uVelocity,n.read.attach(0)),I(i),Y.bind(),R.uniform1i(Y.uniforms.uTexture,h.read.attach(0)),R.uniform1f(Y.uniforms.value,E.PRESSURE),I(h.write),h.swap(),W.bind(),R.uniform2f(W.uniforms.texelSize,n.texelSizeX,n.texelSizeY),R.uniform1i(W.uniforms.uDivergence,i.attach(0));for(let e=0;e<E.PRESSURE_ITERATIONS;e++)R.uniform1i(W.uniforms.uPressure,h.read.attach(1)),I(h.write),h.swap();K.bind(),R.uniform2f(K.uniforms.texelSize,n.texelSizeX,n.texelSizeY),R.uniform1i(K.uniforms.uPressure,h.read.attach(0)),R.uniform1i(K.uniforms.uVelocity,n.read.attach(1)),I(n.write),n.swap(),V.bind(),R.uniform2f(V.uniforms.texelSize,n.texelSizeX,n.texelSizeY),D.supportLinearFiltering||R.uniform2f(V.uniforms.dyeTexelSize,n.texelSizeX,n.texelSizeY);let r=n.read.attach(0);R.uniform1i(V.uniforms.uVelocity,r),R.uniform1i(V.uniforms.uSource,r),R.uniform1f(V.uniforms.dt,t),R.uniform1f(V.uniforms.dissipation,E.VELOCITY_DISSIPATION),I(n.write),n.swap(),D.supportLinearFiltering||R.uniform2f(V.uniforms.dyeTexelSize,e.texelSizeX,e.texelSizeY),R.uniform1i(V.uniforms.uVelocity,n.read.attach(0)),R.uniform1i(V.uniforms.uSource,e.read.attach(1)),R.uniform1f(V.uniforms.dissipation,E.DENSITY_DISSIPATION),I(e.write),e.swap()}(s),t=null,R.blendFunc(R.ONE,R.ONE_MINUS_SRC_ALPHA),R.enable(R.BLEND),v=(r=null,R.drawingBufferWidth),f=null==r?R.drawingBufferHeight:r.height,q.bind(),E.SHADING&&R.uniform2f(q.uniforms.texelSize,1/v,1/f),R.uniform1i(q.uniforms.uTexture,e.read.attach(0)),I(r),requestAnimationFrame(er)}function en(t,r,i,o,a){var u;let l;O.bind(),R.uniform1i(O.uniforms.uTarget,n.read.attach(0)),R.uniform1f(O.uniforms.aspectRatio,T.width/T.height),R.uniform2f(O.uniforms.point,t,r),R.uniform3f(O.uniforms.color,i,o,0),R.uniform1f(O.uniforms.radius,(u=E.SPLAT_RADIUS/100,(l=T.width/T.height)>1&&(u*=l),u)),I(n.write),n.swap(),R.uniform1i(O.uniforms.uTarget,e.read.attach(0)),R.uniform3f(O.uniforms.color,a.r,a.g,a.b),I(e.write),e.swap()}function ei(e,t,r,n){e.id=t,e.down=!0,e.moved=!1,e.texcoordX=r/T.width,e.texcoordY=1-n/T.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0,e.color=ea()}function eo(e,t,r,n){var i,o;let a,u;e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=t/T.width,e.texcoordY=1-r/T.height,i=e.texcoordX-e.prevTexcoordX,(a=T.width/T.height)<1&&(i*=a),e.deltaX=i,o=e.texcoordY-e.prevTexcoordY,(u=T.width/T.height)>1&&(o/=u),e.deltaY=o,e.moved=Math.abs(e.deltaX)>0||Math.abs(e.deltaY)>0,e.color=n}function ea(){let e=function(e,t,r){let n,i,o,a,u,l,c,v;switch(a=Math.floor(6*e),u=6*e-a,l=0,c=r*(1-u*t),v=r*(1-(1-u)*t),a%6){case 0:n=r,i=v,o=l;break;case 1:n=c,i=r,o=l;break;case 2:n=l,i=r,o=v;break;case 3:n=l,i=c,o=r;break;case 4:n=v,i=l,o=r;break;case 5:n=r,i=l,o=c}return{r:n,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function eu(e){let t=R.drawingBufferWidth/R.drawingBufferHeight;t<1&&(t=1/t);let r=Math.round(e),n=Math.round(e*t);return R.drawingBufferWidth>R.drawingBufferHeight?{width:n,height:r}:{width:r,height:n}}function el(e){return Math.floor(e*(window.devicePixelRatio||1))}window.addEventListener("mousedown",e=>{let t=p[0];ei(t,-1,el(e.clientX),el(e.clientY)),function(e){let t=ea();t.r*=10,t.g*=10,t.b*=10;let r=10*(Math.random()-.5),n=30*(Math.random()-.5);en(e.texcoordX,e.texcoordY,r,n,t)}(t)}),document.body.addEventListener("mousemove",function e(t){let r=p[0],n=el(t.clientX),i=el(t.clientY),o=ea();er(),eo(r,n,i,o),document.body.removeEventListener("mousemove",e)}),window.addEventListener("mousemove",e=>{let t=p[0],r=el(e.clientX),n=el(e.clientY),i=t.color;eo(t,r,n,i)}),document.body.addEventListener("touchstart",function e(t){let r=t.targetTouches,n=p[0];for(let e=0;e<r.length;e++){let t=el(r[e].clientX),i=el(r[e].clientY);er(),ei(n,r[e].identifier,t,i)}document.body.removeEventListener("touchstart",e)}),window.addEventListener("touchstart",e=>{let t=e.targetTouches,r=p[0];for(let e=0;e<t.length;e++){let n=el(t[e].clientX),i=el(t[e].clientY);ei(r,t[e].identifier,n,i)}}),window.addEventListener("touchmove",e=>{let t=e.targetTouches,r=p[0];for(let e=0;e<t.length;e++)eo(r,el(t[e].clientX),el(t[e].clientY),r.color)},!1),window.addEventListener("touchend",e=>{let t=e.changedTouches,r=p[0];for(let e=0;e<t.length;e++)r.down=!1}),er()},[t,r,i,a,u,l,c,v,f,s,m,d,h,x]),(0,n.jsx)("div",{className:"fixed top-0 left-0 z-50 pointer-events-none w-full h-full",children:(0,n.jsx)("canvas",{ref:g,id:"fluid",className:"w-screen h-screen block"})})};r(347);let u=()=>(0,n.jsxs)("div",{className:"relative flex flex-col items-center justify-center h-screen bg-black text-white text-center overflow-hidden",children:[(0,n.jsx)(a,{}),(0,n.jsx)("div",{className:"absolute inset-0 bg-[url('/image/espacio.webp')] bg-cover bg-center "}),(0,n.jsx)("img",{src:"/image/astronauta.webp",alt:"Astronauta flotando",className:"astronauta absolute w-80 md:w-[30rem] ",style:{top:"50%",left:"50%",transform:"translate(-50%, -50%)"}}),(0,n.jsx)("h1",{className:"error_title text-6xl md:text-9xl font-extrabold relative  text-teal-400 z-10",children:"404"}),(0,n.jsx)("p",{className:"error_text text-xl md:text-2xl mt-4 relative text-bold  z-10",children:"\xa1Parece que te has perdido en el espacio!"}),(0,n.jsx)(i,{href:"/",children:(0,n.jsx)("button",{className:"error_btn mt-8 px-6 py-3 text-lg   bg-teal-400 text-black rounded-full font-semibold hover:bg-teal-300 transition relative z-10",children:"Volver a casa"})})]})}},e=>{var t=t=>e(e.s=t);e.O(0,[690,874,441,684,358],()=>t(6882)),_N_E=e.O()}]);